import styles from '@/styles/Home.module.css'
import { ButtonGroup, Button, TextField, Paper, Grid, InputLabel, FormHelperText, OutlinedInput } from '@mui/material'
import { Inter } from '@next/font/google'
import Head from 'next/head'
import { useFormik } from 'formik'
import * as Yup from 'yup'
import FormControl from '@mui/material/FormControl'
import Input from '@mui/material/Input'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const formik = useFormik({
    initialValues: {
      username: '',
      password: '',
      confirm_password: '',
      first_name: '',
      middle_name: '',
      last_name: '',
      email: '',
      number: ''
    },
    validationSchema: Yup.object({
      firstName: Yup.string()
        .max(15, 'Must be 15 characters or less')
        .required('Required'),
      lastName: Yup.string()
        .max(20, 'Must be 20 characters or less')
        .required('Required'),
      email: Yup.string().email('Invalid email address').required('Required'),
    }),
    onSubmit: values => {
      alert(JSON.stringify(values, null, 2));
      formik.resetForm()
    },
  })
  return (
    <>
      <Head>
        <title>Registration Form</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Paper elevation={3} sx={{ padding: '20px' }}>
          <Grid container>
            <Grid item xs={12} md={12} sx={{ textAlign: "center" }}>
              <h1 className={inter.className}>Registration Form</h1>
            </Grid>
            <form onSubmit={formik.handleSubmit}>
              <Grid container alignItems="center" sx={{ padding: '10px' }} spacing={2}>
                <Grid item md={12}>
                  <TextField variant="outlined" name="username" label="Username" fullWidth onChange={formik.handleChange} value={formik.values.username} />
                </Grid>
                <Grid item md={6}>
                  <TextField variant="outlined" name="password" label="Password" fullWidth onChange={formik.handleChange} value={formik.values.password} />
                </Grid>
                <Grid item md={6}>
                  <TextField variant="outlined" name="confirm_password" label="Confirm Password" fullWidth onChange={formik.handleChange} value={formik.values.confirm_password} />
                </Grid>
                <Grid item md={4}>
                  <TextField variant="outlined" name="first_name" label="First Name" fullWidth onChange={formik.handleChange} value={formik.values.first_name} />
                </Grid>
                <Grid item md={4}>
                  <TextField variant="outlined" name='middle_name' label="Middle Name" fullWidth onChange={formik.handleChange} value={formik.values.middle_name} />
                </Grid>
                <Grid item md={4}>
                  <TextField variant="outlined" name="last_name" label="Last Name" fullWidth onChange={formik.handleChange} value={formik.values.last_name} />
                </Grid>
                <Grid item md={12}>
                  <FormControl fullWidth>
                    <InputLabel htmlFor="email">Email Address</InputLabel>
                    <OutlinedInput label="Email Address" name="email" id="email" onChange={formik.handleChange} value={formik.values.email} />
                    {formik.touched.email && formik.errors.email ? (
                      <FormHelperText>{formik.errors.email}</FormHelperText>
                    ) : null}
                  </FormControl>

                </Grid>
                <Grid item md={12}>
                  <TextField variant="outlined" name="number" label="Mobile Number" fullWidth onChange={formik.handleChange} value={formik.values.number} />
                </Grid>
                <Grid item md={12} sx={{ display: "flex", justifyContent: "flex-end" }}>
                  <ButtonGroup>
                    <Button variant='contained' color="warning" type='button' onClick={e => formik.resetForm()}>Clear</Button>
                    <Button variant='contained' color="primary" type='submit'>Register</Button>
                  </ButtonGroup>

                </Grid>
              </Grid>
            </form>
          </Grid>
        </Paper>
      </main>
    </>
  )
}
